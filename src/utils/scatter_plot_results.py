import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# Data
data = {
    "type": ["5x5", "5x6", "5x7", "5x8", "6x6", "6x7", "6x8", "7x7", "7x8", "8x8"],
    "uni": [
        [61, 191, 40, 128, 52, 94, 110, 47, 23, 34, 20, 16, 26, 20, 28, 30, 55, 22, 34, 30, 115, 513, 127, 84, 531, 133, 318, 53, 238, 115, 514, 308, 441, 319, 514, 441, 363, 514, 336, 513],
        [530, 846, 541, 131, 1030, 541, 1135, 348, 1315, 1030, 230, 25, 166, 554, 35, 50, 74, 129, 200, 47, 203, 698, 289, 240, 42, 178, 65, 168, 118, 71, 1538, 817, 965, 817, 1512, 784, 2028, 965, 2368, 840],
        [30, 67, 129, 534, 330, 432, 437, 248, 583, 179, 141, 632, 144, 130, 279, 169, 250, 255, 254, 140, 2620, 2207, 4055, 4006, 8217, 2483, 8217, 8176, 1683, 1538, 1669, 289, 6712, 3118, 5031, 493, 1652, 2915, 3898, 4892],
    [1217, 5281, 552, 806, 1487, 372, 2212, 486, 905, 518, 2871, 882, 2376, 714, 1406, 743, 831, 528, 1287, 3891, 8304, 3864, 5762, 5762, 16514, 13121, 11283, 5762, 11225, 31196, 239, 769, 159, 150, 427, 869, 236, 887, 1057, 193],
    [274, 220, 154, 170, 326, 123, 155, 294, 94, 254, 1370, 957, 9170, 4169, 2263, 1783, 2263, 2808, 1317, 3489, 970, 518, 331, 927, 387, 987, 543, 109, 320, 622, 6245, 6702, 6431, 12354, 12435, 12435, 11773, 6225, 14700, 11936],
    [484, 617, 500, 1348, 556, 961, 424, 923, 284, 781, 36235, 36235, 12332, 15898, 4567, 39520, 23807, 37139, 33110, 33110, 1644, 338, 215, 331, 350, 527, 202, 145, 290, 307, 3378, 2119, 1748, 4425, 1899, 1629, 3179, 31212, 31860, 448],
    [308645, 569764, 569764, 288804, 223027, 208933, 258250, 290726, 251041, 620120, 7038, 189, 414, 241, 833, 356, 501, 4042, 537, 1337, 191117, 4061, 43576, 30644, 71722, 13081, 17264, 36221, 12375, 2123, 958, 3187, 1582, 310, 900, 380, 640, 1365, 1681, 1535],
    [225144, 223793, 226202, 83966, 225064, 227787, 222170, 225064, 225144, 8565, 65206, 23917, 7010, 2787, 6784, 16774, 36697, 102390, 9106, 3279, 162, 343, 713, 737, 3816, 2237, 1434, 5729, 5558, 1556, 2656, 1093, 821, 819, 6075, 9628, 3809, 3606, 6586],
    [9893, 1238, 10773, 7125, 7669, 6328, 4593, 1263, 2033, 2112, 13539, 116087, 58429, 216619, 40845, 44286, 136113, 2758, 10523, 223760, 1452, 1561, 728, 1797, 9906, 123181, 9620, 447, 6649, 12983, 64533, 609426, 844529, 586533, 54698, 465127, 451970, 364190, 1476369, 420068],
    [9206098, 5885414, 956387, 17162818, 690757, 1687221, 142, 3408, 879, 2116, 444, 8577, 1089, 9958, 883, 10145, 147695, 1751923, 552500, 46302, 429707, 2496555, 101955, 240334, 25113, 197830, 40055, 69931, 8190, 219182, 105100, 27906, 19012, 126559, 27820, 190636, 956387, 17162818]
    ],
    "bi": [
       [75, 115, 22, 139, 44, 65, 145, 59, 36, 29, 23, 19, 30, 18, 21, 49, 38, 27, 20, 31, 132, 266, 221, 132, 164, 96, 198, 59, 163, 110, 271, 163, 348, 156, 271, 348, 212, 271, 215, 268],
    [374, 416, 237, 163, 306, 279, 606, 378, 656, 306, 128, 61, 144, 212, 98, 35, 63, 119, 93, 53, 131, 266, 166, 162, 111, 92, 112, 92, 101, 56, 614, 597, 471, 597, 734, 566, 762, 471, 1255, 562],
    [144, 98, 70, 283, 105, 224, 317, 267, 251, 149, 101, 153, 67, 227, 217, 107, 148, 102, 124, 59, 1404, 1222, 1716, 1540, 2217, 1124, 2217, 2254, 1430, 1549, 525, 277, 1165, 1129, 1888, 500, 544, 1134, 1109, 1465],
    [741, 1107, 494, 586, 539, 150, 653, 528, 502, 231, 1282, 5737, 4023, 330, 427, 573, 333, 1674, 693, 2958, 2796, 3500, 2033, 2033, 5304, 6290, 3288, 2033, 3872, 6093, 150, 407, 178, 119, 225, 273, 248, 511, 617, 189],
    [205, 172, 66, 121, 171, 216, 106, 114, 82, 189, 683, 462, 3303, 1674, 825, 1224, 825, 776, 488, 1119, 367, 267, 229, 580, 223, 276, 328, 121, 228, 351, 2503, 2581, 5288, 3527, 3890, 3890, 3432, 2379, 4321, 4062],
    [935, 657, 940, 331, 476, 803, 304, 781, 165, 270, 10081, 10081, 5992, 6495, 6971, 8797, 5991, 9398, 9430, 9430, 879, 276, 205, 628, 371, 306, 172, 100, 186, 132, 2604, 1064, 1014, 1756, 834, 953, 1339, 8073, 10317, 1870],
    [45034, 69140, 69140, 43411, 41929, 37877, 35309, 42814, 29788, 65488, 3889, 444, 207, 284, 1224, 749, 442, 1238, 265, 958, 35994, 4653, 8269, 5100, 13339, 4264, 8110, 10161, 7850, 3179, 962, 1087, 1308, 1065, 445, 415, 2590, 1557, 2033, 564],
    [44161, 33262, 33992, 41222, 44208, 40817, 47105, 44208, 44161, 3808, 7658, 6249, 4782, 1428, 2297, 3511, 20630, 36614, 4279, 637, 163, 497, 345, 302, 1156, 1099, 463, 1323, 2055, 1006, 1446, 1675, 336, 477, 3167, 7152, 1532, 1745, 2650],
    [5067, 3703, 5200, 1227, 3456, 2683, 2560, 703, 9925, 2623, 4644, 48495, 19083, 68611, 8830, 11742, 43121, 4737, 2346, 41336, 838, 470, 256, 833, 4073, 15145, 4564, 288, 3939, 12899, 87328, 86305, 80359, 128917, 106415, 168716, 111470, 198037, 110904, 298277],
    [653822, 528506, 669732, 965479, 438908, 309745, 143, 1004, 776, 674, 353, 1665, 480, 3158, 476, 3602, 41374, 301283, 147337, 8575, 109708, 378648, 65558, 22498, 30722, 35517, 12075, 9264, 1221, 17997, 18754, 4684, 5048, 66348, 24726, 74946, 669732, 965479]],
}

# Flatten the data for plotting
x = []  # uni values
y = []  # bi values
colors = []  # color codes based on type
labels = []

color_map = {
    "5x5": "blue",
    "5x6": "orange",
    "5x7": "green",
    "5x8": "red",
    "6x6": "purple",
    "6x7": "brown",
    "6x8": "pink",
    "7x7": "gray",
    "7x8": "olive",
    "8x8": "cyan",
}

for idx, type_ in enumerate(data["type"]):
    for uni_value, bi_value in zip(data["uni"][idx], data["bi"][idx]):
        x.append(uni_value)
        y.append(bi_value)
        colors.append(color_map[type_])
        labels.append(type_)
        print(f"{uni_value} {bi_value} {type_}")

# Calculate the range of the data
min_val = min(min(x), min(y))
max_val = max(max(x), max(y))

# Create scatter plot
plt.figure(figsize=(10, 6))
plt.scatter(x, y, c=colors, alpha=0.8, label=data["type"], edgecolors='k')

# Add the identity line
plt.plot([min_val, max_val], [min_val, max_val], color='black', linestyle='--', label='Identity (y = x)')

# Log scale
plt.xscale("log")
plt.yscale("log")

# Labels and title
plt.xlabel("uni")
plt.ylabel("bi")
plt.title("Number of Expansions")

# Legend
legend_elements = [
    plt.Line2D([0], [0], marker='o', color='w', markerfacecolor=color, markersize=8, label=type_)
    for type_, color in color_map.items()
]
plt.legend(handles=legend_elements, title="Types")

# Show plot
plt.grid(True, which="both", linestyle="--", linewidth=0.5)
plt.tight_layout()
# plt.show()
plt.savefig("scatter_plot_results.png")

